variables:
  TZ: "Europe/Moscow"

  RESTORE:
    value: "false"
    options:
      - "false"
      - "true"
    description: "Variable used to enable the recovery mechanism"

  BACKUP_DIR_RESTORE:
    value: ""
    description: "The directory where the database backup is located"

  DB_NAME_RESTORE:
    value: ""
    description: "Name of the database to restore"

  HOST_NAME_RESTORE:
    value: ""
    description: "The name of the virtual server where the database is located"

  DB_USER_RESTORE:
    value: "$POSTGRESQL_USER"
    description: "Username to connect to the database"  

  DB_PASSWORD_RESTORE:
    value: "$PG_PASSWORD"
    description: "User password for connecting to the database"

  DB_PORT_RESTORE:
    value: "$PORT"
    description: "The port used to connect to the database."

  BACKUP_DIR_RESTORE:
    value: "/store/restore"
    description: "The directory where the database backup is located"

.ssh-prepare:
  before_script:
    - |         
        apk add --no-cache openssh-client
        eval $(ssh-agent -s)
        echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
        mkdir -p ~/.ssh
        touch ~/.ssh/config
        touch ~/.ssh/known_hosts
        chmod -R 400 ~/.ssh
        echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
        export DATE="$(TZ=Europe/Moscow date +%d.%m.%Y)"

check_directory:
  image: alpine:latest
  script:
    - ssh -o TCPKeepAlive=yes -o ServerAliveCountMax=500 -o ServerAliveInterval=2000 $SSH_USER@$SSH_HOST "ls -l $BACKUP_DIR_RESTORE"
  extends:
    - .ssh-prepare
  rules:
    - if: $RESTORE == "true" && $BACKUP_DIR_RESTORE != ""
      when: manual

restore_job:
  image: alpine:latest
  extends:
    - .ssh-prepare
  script:
    - ssh -o TCPKeepAlive=yes -o ServerAliveCountMax=500 -o ServerAliveInterval=2000 $SSH_USER@$SSH_HOST "bash /store/script/restore.sh $PG_PASSWORD $HOST_NAME_RESTORE $DB_PORT_RESTORE $DB_USER_RESTORE $DB_NAME_RESTORE $BACKUP_DIR_RESTORE"
  rules:
    - if: $RESTORE == "true" && $DB_NAME_RESTORE != "" && $HOST_NAME_RESTORE != ""
      when: manual

backup_job:
  image: alpine:latest
  extends:
    - .ssh-prepare
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  script:
    - ssh -o TCPKeepAlive=yes -o ServerAliveCountMax=500 -o ServerAliveInterval=2000 $SSH_USER@$SSH_HOST "bash /store/script/backup.sh $PG_PASSWORD $HOST $PORT $POSTGRESQL_USER $DATABASE $BACKDIR $S3_BUCKET"